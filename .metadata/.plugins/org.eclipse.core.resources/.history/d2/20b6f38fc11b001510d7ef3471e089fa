var fs = require('fs'),
    xml2js = require('xml2js'),
    OAIPMH = require('../lib').OAIPMH;
    
var parser = new xml2js.Parser();

describe('OAI:PMH', function() {
	var doc;
	
	before(function(done) {
		fs.readFile('xml/0.xml', function(err, data) {
			if (err) return done(err);
			
			parser.parseString(data, function (err, document) {
				if (err) return done(err);
				
				doc = new OAIPMH(document);
				
				done();
			});
		});
	});
	
	it ("Should detect what document has been loaded", function() {
		expect(doc).to.exist;
	});
	
	it("Should detect OAI:PMH root node", function() {
		expect(doc.root()).to.exist;
	});
	
	it("Should detect OAI:PMH resumptionToken node", function() {
		expect(doc.resumptionToken()).to.exist;
	});
	
	describe('#records', function() {
		it("Should detect OAI:PMH records", function() {
			expect(doc.records()).to.exist;
		});
		
		it("Should test is records are an array", function() {
			assert(Array.isArray(doc.records()));
		});

		it("Should have 100 records", function() {
			expect(doc.records().length).to.be.equal(100);
		});
		
		it("Should be able to access first record", function() {
			expect(doc.record(0)).to.exist;
		});

		it("Should be able to access last record", function() {
			expect(doc.record(99)).to.exist;
		});

		it("Should be able to not access not existing record", function() {
			expect(doc.record(100)).to.not.exist;
		});

		describe('#record header', function() {
			it("Should be able to access first record header", function() {
				expect(doc.record(0).header()).to.exist;
			});
			
			it("The record identifier should be equal to 'oai:ands.org.au::1845'", function() {
				expect(doc.record(0).header().identifier()).is.equal("oai:ands.org.au::1845");
			});

			it("The record datestamp should be equal to '2014-07-17T02:36:15Z'", function() {
				expect(doc.record(0).header().datestamp()).is.equal("2014-07-17T02:36:15Z");
			});
			
			it("The record datasource should be equal to 'Founders-and-Survivors-Genealogical-Connections'", function() {
				expect(doc.record(0).header().recordDatasource()).is.equal("Founders-and-Survivors-Genealogical-Connections");
			});

			it("The record class should be equal to 'collection'", function() {
				expect(doc.record(0).header().recordClass()).is.equal("collection");
			});
			
			it("The record group should be equal to 'The0x20University0x20of0x20Melbourne'", function() {
				expect(doc.record(0).header().recordGroup()).is.equal("The0x20University0x20of0x20Melbourne");
			});
		});

		describe('#record metadata', function() {
			it("Should be able to access first record metadata", function() {
				expect(doc.record(0).metadata()).to.exist;
			});
			
			describe('RIF:CS', function() {
				before(function(done) {
				
				});
			});			
		});
	});
	
});





