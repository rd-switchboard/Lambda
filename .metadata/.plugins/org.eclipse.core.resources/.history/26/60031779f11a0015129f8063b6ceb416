/**
 * 
 */

var xml4js = require('xml4js');
var async = require('async');
var AWS = require('aws-sdk');
var util = require('util');

// get reference to S3 client
var s3 = new AWS.S3();

exports.handler = function(event, context) {
    // log event information
    console.log("Reading options from event:\n", util.inspect(event, {depth: 5}));

    var bucket = event.Records[0].s3.bucket.name;
    console.log("Bucket: " + bucket);

    // Object key may have spaces or unicode non-ASCII characters.
    var key = decodeURIComponent(event.Records[0].s3.object.key.replace(/\+/g, " "));
    console.log("key: " + bucket);

    async.waterfall(
        [
            function download(next) {
                // Download the image from S3 into a buffer.
                s3.getObject({
                    Bucket: bucket,
                    Key: key
                },
                next);
            },
            function process(response, next) {

            }
        ], function (err) {
            if (err) {
                console.error(
                    'Unable to resize ' + srcBucket + '/' + srcKey +
                    ' and upload to ' + dstBucket + '/' + dstKey +
                    ' due to an error: ' + err
                );
            } else {
                console.log(
                    'Successfully resized ' + srcBucket + '/' + srcKey +
                    ' and uploaded to ' + dstBucket + '/' + dstKey
                );
            }

            context.done();
        }
    );

    xml4js.parseString(xml, {downloadSchemas: true}, function (err, result) {
        console.log(util.inspect(result, false, null));
    });

};
